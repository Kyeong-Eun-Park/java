/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-03-22 06:10:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ajax;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class test2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1675146893323L));
    _jspx_dependants.put("jar:file:/D:/Shared/JSP/workspace_JSP/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/StudyJavascript/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- css/main.css 파일 불러오기 -->\r\n");
      out.write("<link href=\"css/inc.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"css/subpage.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<script src=\"js/jquery-3.6.4.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(function() {\r\n");
      out.write("		// 중복확인 버튼 클릭됐을 때의 이벤트 처리		\r\n");
      out.write("		$(\"#btnCheckId\").on(\"click\", function() {\r\n");
      out.write("			// 새 창에 test2_check_id.jsp 페이지 열기(단, 서블릿 주소로 요청)\r\n");
      out.write("			window.open(\"MemberCheckDupIdForm.me\", \"check\", \"width=400, height=300\");\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// ==========================================================================\r\n");
      out.write("		// 아이디 입력란에서 포커스가 해제될 때(커서가 빠질 때)의 이벤트 처리\r\n");
      out.write("		$(\"#id\").on(\"blur\", function() {\r\n");
      out.write("			// 입력된 아이디가 널스트링이면 \"checkIdResult\" 영역에\r\n");
      out.write("			// \"아이디는 필수 입력 항목입니다\"(빨간색) 출력 후 함수 처리 종료(return)\r\n");
      out.write("			if($(\"#id\").val() == \"\") {\r\n");
      out.write("				$(\"#checkIdResult\").html(\"아이디는 필수 입력 항목입니다\").css(\"color\", \"red\");\r\n");
      out.write("				return; // 함수 처리 종료\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			// AJAX 를 활용하여 \"MemberCheckDupIdPro2.me\" 서블릿 요청을 통해\r\n");
      out.write("			// 아이디 중복 검사 작업 수행 후 결과값을 리턴받아 처리\r\n");
      out.write("			// => 전달할 파라미터 : 아이디\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: \"MemberCheckDupIdPro2.me\", // MemberCheckDupIdProAction2 매핑\r\n");
      out.write("				data: {\r\n");
      out.write("					id: $(\"#id\").val()\r\n");
      out.write("				},\r\n");
      out.write("				success: function(result) { // 성공 시에만 작업 처리\r\n");
      out.write("// 					alert(result + \" : \" + typeof(result));\r\n");
      out.write("					// 처리 페이지(비즈니스 로직)에서 처리 성공 후 \"true\" or \"false\" 값 리턴\r\n");
      out.write("					// 리턴받은 결과값에 대해 \"true\" 또는 \"false\" 판별\r\n");
      out.write("					if(result == \"true\") {\r\n");
      out.write("						// checkIdResult 영역에 \"이미 사용중인 아이디\"(빨간색) 출력\r\n");
      out.write("						$(\"#checkIdResult\").html(\"이미 사용중인 아이디\").css(\"color\", \"red\");\r\n");
      out.write("					} else if(result == \"false\") {\r\n");
      out.write("						// checkIdResult 영역에 \"사용 가능한 아이디\"(파란색) 출력\r\n");
      out.write("						$(\"#checkIdResult\").html(\"사용 가능한 아이디\").css(\"color\", \"blue\");\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/inc/top.jsp", out, false);
      out.write("\r\n");
      out.write("	</header>\r\n");
      out.write("	<article id=\"joinForm\">\r\n");
      out.write("		<h1>회원 가입</h1>\r\n");
      out.write("		<form action=\"MemberJoinPro.me\" method=\"post\" name=\"joinForm\">\r\n");
      out.write("			<table border=\"1\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th class=\"td_left\">이름</th>\r\n");
      out.write("					<td class=\"td_right\"><input type=\"text\" name=\"name\" required=\"required\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th class=\"td_left\">ID</th>\r\n");
      out.write("					<td class=\"td_right\">\r\n");
      out.write("						<input type=\"text\" name=\"id\" id=\"id\" placeholder=\"4 ~ 8글자 사이 입력\" required=\"required\">\r\n");
      out.write("						<input type=\"button\" value=\"중복확인(새창)\" id=\"btnCheckId\">\r\n");
      out.write("						<div id=\"checkIdResult\"></div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th class=\"td_left\">비밀번호</th>\r\n");
      out.write("					<td class=\"td_right\">\r\n");
      out.write("						<input type=\"text\" name=\"passwd\" placeholder=\"8 ~ 16글자 사이 입력\" required=\"required\">\r\n");
      out.write("						<span id=\"checkPasswdResult\"></span>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th class=\"td_left\">비밀번호확인</th>\r\n");
      out.write("					<td class=\"td_right\">\r\n");
      out.write("						<input type=\"password\" name=\"passwd2\" onchange=\"checkConfirmPasswd(this.value)\" required=\"required\">\r\n");
      out.write("						<span id=\"checkPasswd2Result\"></span>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th class=\"td_left\">E-Mail</th>\r\n");
      out.write("					<td class=\"td_right\">\r\n");
      out.write("						<input type=\"text\" name=\"email1\" class=\"email\" required=\"required\">@<input type=\"text\" name=\"email2\" class=\"email\" required=\"required\">\r\n");
      out.write("						<select id=\"emailDomain\" onchange=\"selectDomain(this.value)\">\r\n");
      out.write("							<option value=\"\">직접입력</option>\r\n");
      out.write("							<option value=\"naver.com\">naver.com</option>\r\n");
      out.write("							<option value=\"nate.com\">nate.com</option>\r\n");
      out.write("							<option value=\"gmail.com\">gmail.com</option>\r\n");
      out.write("						</select>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th class=\"td_left\">성별</th>\r\n");
      out.write("					<td class=\"td_right\">\r\n");
      out.write("						<input type=\"radio\" name=\"gender\" value=\"남\">남\r\n");
      out.write("						<input type=\"radio\" name=\"gender\" value=\"여\">여\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\" id=\"btnArea\">\r\n");
      out.write("						<input type=\"submit\" value=\"가입\">\r\n");
      out.write("						<input type=\"reset\" value=\"초기화\">\r\n");
      out.write("						<input type=\"button\" value=\"돌아가기\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	</article>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
